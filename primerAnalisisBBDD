import pandas as pd                                       #importing pandas
import numpy as np                                        #importing numpy
import matplotlib.pyplot as plt                           #importing matplotlib 
import seaborn as sns                                     #importing seaborn
from sklearn.model_selection import train_test_split      #importing scikit-learn's function for data splitting
from sklearn.linear_model import LinearRegression         #importing scikit-learn's linear regressor function
from sklearn.neural_network import MLPRegressor           #importing scikit-learn's neural network function
from sklearn.ensemble import GradientBoostingRegressor    #importing scikit-learn's gradient booster regressor function
from sklearn.metrics import mean_squared_error            #importing scikit-learn's root mean squared error function for model evaluation
from sklearn.model_selection import cross_validate        #improting scikit-learn's cross validation function
import gurobipy as gp                                     #importing Gurobi

# Cargar el dataset
boxscores = pd.read_csv('base.csv')

# Crear subplots para analizar variables
fig, (NES, V6H, PCL, BMC) = plt.subplots(1, 4, figsize=(18, 5))
fig.tight_layout()

# Gráficos de dispersión usando proposed_credit_limit como referencia
NES.scatter(boxscores['name_email_similarity'], boxscores['proposed_credit_limit'], c='blue', alpha=0.2)
V6H.scatter(boxscores['velocity_6h'], boxscores['proposed_credit_limit'], c='green', alpha=0.2)
PCL.scatter(boxscores['customer_age'], boxscores['proposed_credit_limit'], c='orange', alpha=0.2)
BMC.scatter(boxscores['bank_months_count'], boxscores['proposed_credit_limit'], c='red', alpha=0.2)

# Etiquetas de los ejes
NES.set_xlabel('Name Email Similarity')
V6H.set_xlabel('Velocity (6h)')
PCL.set_xlabel('Customer Age')
BMC.set_xlabel('Bank Months Count')

NES.set_ylabel('Proposed Credit Limit')
V6H.set_ylabel('Proposed Credit Limit')
PCL.set_ylabel('Proposed Credit Limit')
BMC.set_ylabel('Proposed Credit Limit')

# Mostrar gráficos
plt.show()

#fraud_bool,income,name_email_similarity,prev_address_months_count,current_address_months_count,customer_age,days_since_request,intended_balcon_amount,payment_type,zip_count_4w,velocity_6h,velocity_24h,velocity_4w,bank_branch_count_8w,date_of_birth_distinct_emails_4w,employment_status,credit_risk_score,email_is_free,housing_status,phone_home_valid,phone_mobile_valid,bank_months_count,has_other_cards,proposed_credit_limit,foreign_request,source,session_length_in_minutes,device_os,keep_alive_session,device_distinct_emails_8w,device_fraud_count,month
#primeras variables a usar: name_email_similarity,velocity_6h,proposed_credit_limit,bank_months_count